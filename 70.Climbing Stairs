# STATEMENT OF PROBLEM 

You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

=================================================================================================================================================================================

## SOLUTION OF PROBLEM ( IN JAVA )

class Solution {
    public int climbStairs(int n) {
        if(n<=3){
            return n;
        }
        int curr=0;
        int prev1=3;
        int prev2=2;
        for(int i=3;i<n;i++){
            curr=prev2+prev1;
            prev2=prev1;
            prev1=curr;
        }
        return curr;
    }
}
=================================================================================================================================================================================

## CODE COMPLEXITIES :-

1.) TIME COMPLEXITY :- O(n)
2.) SPACE COMPLEXITY :- O(1)

=================================================================================================================================================================================
