## PROBLEM STATEMENT 

Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

===============================================================================================================================================================================

## CODE( IN JAVA )

class Solution {
    public int countSubstrings(String s) {
        int res=0;

        for(int i=0;i<s.length();i++){
            res+=count_palindrome(s,i,i);
            res+=count_palindrome(s,i,i+1);
        }

        return res;
    }

    public int count_palindrome(String s, int left , int right){
        int count=0;
        while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right)){
            count++;
            left--;
            right++;
        }
        return count;
    }
}

===============================================================================================================================================================================

## CODE COMPLEXITY :- 

1.) TIME COMPLEXITY :- O(n^2)
2.) SPACE COMPLEXITY :- O(1)

===============================================================================================================================================================================
