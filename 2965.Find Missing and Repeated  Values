# Code statement 

You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. 
Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.

==================================================================================================================================================================================

# Code solution(in java)

class Solution {
    public int[] findMissingAndRepeatedValues(int[][] grid) {
        int n = grid.length;
        int size = n * n;
        int[] count = new int[size + 1]; // Array to store occurrences
        int repeating = -1, missing = -1;
        
        // Count occurrences of each number
        for (int[] row : grid) {
            for (int num : row) {
                count[num]++;
            }
        }
        
        // Identify repeating and missing numbers
        for (int i = 1; i <= size; i++) {
            if (count[i] == 2) {
                repeating = i;
            } else if (count[i] == 0) {
                missing = i;
            }
        }
        
        return new int[]{repeating, missing};
    }
}

==============================================================================================================================================================================

# Time complexity :- 

1.)Time complexity :- 
2.)Space complexity :-

===============================================================================================================================================================================
