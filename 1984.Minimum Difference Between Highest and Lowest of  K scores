## PROBLEM STATEMENT 

You are given a 0-indexed integer array nums, where nums[i] represents the score of the ith student. You are also given an integer k.

Pick the scores of any k students from the array so that the difference between the highest and the lowest of the k scores is minimized.

Return the minimum possible difference.

=================================================================================================================================================================================

## PROBLEM LINK 

// https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/?envType=problem-list-v2&envId=sliding-window
=================================================================================================================================================================================

## CODE ( IN JAVA )

class Solution {
    public int minimumDifference(int[] nums, int k) {
        Arrays.sort(nums);
        int n=nums.length;
        int minDiff=Integer.MAX_VALUE;

        for(int i=0;i<=n-k;i++){
            int diff=nums[i+k-1]-nums[i];
            minDiff=Math.min(minDiff,diff);
        }

        return minDiff;
    }
}

=================================================================================================================================================================================

## CODE COMPLEXITY :- 

1.) TIME COMPLEXITY :- O(n log n)
2.) SPACE COMPLEXITY :- O(1)

=================================================================================================================================================================================
