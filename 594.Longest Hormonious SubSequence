## STATEMENT OF PROBLEM 

We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.

Given an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.

==================================================================================================================================================================================

## SOLUTION OR PROBLEM ( IN JAVA )

class Solution {
    public int findLHS(int[] nums) {
        int start=0;
        int n=nums.length;
        Arrays.sort(nums);
        int maxLen=0;
        for(int end=0;end<nums.length;end++){
            while(nums[end]-nums[start]>1){
                start++;
            }
            if(nums[end]-nums[start]==1){
               maxLen=Math.max(maxLen,end-start+1);      
            }
            
        }
        return maxLen;
    }
}

==================================================================================================================================================================================

## CODE COMPLEXITIES :- 

1.) TIME COMPLEXITY :- O( n log n )
2.) SPACE COMPLEXITY :- O(1)

==================================================================================================================================================================================
