## PROBLEM STATEMENT

Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.

===============================================================================================================================================================================

## CODE ( IN JAVA )

class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        if(mat==null || mat.length==0) return new int[0];
        int m=mat.length,n=mat[0].length;
        int[] result=new int[n*m];
        int k=0;

        for(int d=0;d<m+n-1;d++){
            List<Integer> temp=new ArrayList<>();

            int r=d<n?0:d-n+1;
            int c=d<n?d:n-1;

            while(r<m && c>=0){
                temp.add(mat[r][c]);
                r++;
                c--;
            }

            if(d%2==0){
                Collections.reverse(temp);
            }

            for(int val:temp){
                result[k++]=val;
            }
        }

        return result;
    }
}

===============================================================================================================================================================================

## CODE COMPLEXITIES :- 

1.) TIME COMPLEXITY :- O(n*m)
2.) SPACE COMPLEXITY :- O(1)

===============================================================================================================================================================================
