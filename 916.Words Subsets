# Code question 
You are given two string arrays words1 and words2.

A string b is a subset of string a if every letter in b occurs in a including multiplicity.

For example, "wrr" is a subset of "warrior" but is not a subset of "world".
A string a from words1 is universal if for every string b in words2, b is a subset of a.

Return an array of all the universal strings in words1. You may return the answer in any order.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Solution (in java)

class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        List<String> result = new ArrayList<>();
        int[] maxFrequency = new int[26]; 
        for (String b : words2) {
            int[] bFrequency = new int[26];  
            for (char c : b.toCharArray()) {
                bFrequency[c - 'a']++;
            }
            for (int i = 0; i < 26; i++) {
                maxFrequency[i] = Math.max(maxFrequency[i], bFrequency[i]);
            }
        }
        for (String a : words1) {
            int[] aFrequency = new int[26];
            for (char c : a.toCharArray()) {
                aFrequency[c - 'a']++;
            }
            boolean isUniversal = true;
            for (int i = 0; i < 26; i++) {
                if (aFrequency[i] < maxFrequency[i]) {
                    isUniversal = false;
                    break;
                }
            }
            if (isUniversal) {
                result.add(a);
            }
        }
        return result;
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Complexities

Time: O(n×m+k×l).
Space: O(k×l).
