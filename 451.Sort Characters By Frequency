# STATEMENT OF PROBLEM 

Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.

Return the sorted string. If there are multiple answers, return any of them.


==================================================================================================================================================================================

## SOLUTION OF PROBLEM ( IN JAVA )

class Solution {
    public String frequencySort(String s) {
        int[] freq=new int[65536];
        for(char c:s.toCharArray()){
            freq[c]++;
        }
        Character[] array=new Character[s.length()];
        for(int i=0;i<s.length();i++){
            array[i]=s.charAt(i);
        }
        Arrays.sort(array,(a,b)->{
            if(freq[a]!=freq[b]){
                return freq[b]-freq[a];
            }
            else{
                return b-a;
            }
        });
        StringBuilder result=new StringBuilder();
        for(char c:array){
            result.append(c);
        }
        return result.toString();
    }
}

==================================================================================================================================================================================

## COMPLEXITIES :-

1.)TIME COMPLEXITY :-O(nlogn)
2.)SPACE COMPLEXITY :-O(n)

==================================================================================================================================================================================
