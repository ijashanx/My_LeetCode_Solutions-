## PROBLEM STATEMENT :-

A string is good if there are no repeated characters.

Given a string s​​​​​, return the number of good substrings of length three in s​​​​​​.

Note that if there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

=================================================================================================================================================================================

## LINK OF PROBLEM :- 

// https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/?envType=problem-list-v2&envId=sliding-window

=================================================================================================================================================================================

## CODE ( IN JAVA ) :- 

 ## USING HASHSET

class Solution {
    public int countGoodSubstrings(String s) {
        int count=0;
        int n=s.length();
        for(int i=0;i<=n-3;i++){
            HashSet<Character> set=new HashSet<>();

            set.add(s.charAt(i));
            set.add(s.charAt(i+1));
            set.add(s.charAt(i+2));


            if(set.size()==3){
                count++;
            }
        }

        return count;
    }
}

 

class Solution {
    public int countGoodSubstrings(String s) {
         int count=0;
        int n=s.length();
        for(int i=0;i<=n-3;i++){
            char a=s.charAt(i);
            char b=s.charAt(i+1);
            char c=s.charAt(i+2);

            if(a!=b && b!=c && c!=a){
                count++;
            }
        }
        return count;
   }
}   

=================================================================================================================================================================================

## CODE COMPLEXITIES :- 

1.) TIME COMPLEXITY :- O(n)
2.) SPACE COMPLEXITY :- O(1)

=================================================================================================================================================================================
   
