# Code 
Given a string s, return true if the s can be palindrome after deleting at most one character from it.

# Solution (in java)

class Solution {
    public boolean validPalindrome(String s) {
        int right=s.length()-1;
        int left=0;
        while(left<right){
            if(s.charAt(right)==s.charAt(left)){
               left++;
               right--;
            }
            else{
                return isPalindrome(s,left+1,right)||isPalindrome(s,left,right-1);
            }
        }
        return true;

    }
    public boolean isPalindrome(String s, int left ,int right){
        while(right>left){
            if(s.charAt(right)!=s.charAt(left)){
                return false;
            }
            right--;
            left++;
        }
        return true;
    }
}

# Complexities

1.)Time complexity :-O(n)
2.)Space complexity :- O(1)
