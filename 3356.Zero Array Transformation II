# Code statement 

You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri, vali].

Each queries[i] represents the following action on nums:

Decrement the value at each index in the range [li, ri] in nums by at most vali.
The amount by which each value is decremented can be chosen independently for each index.
A Zero Array is an array with all its elements equal to 0.

Return the minimum possible non-negative value of k, such that after processing the first k queries in sequence, nums becomes a Zero Array. 
If no such k exists, return -1.

================================================================================================================================================================================

# Code Solution 

class Solution {
    public int minZeroArray(int[] nums, int[][] queries) {
        int n = nums.length;
        int[] diff = new int[n + 1];
        int sum = 0;
        int pos = 0;
        
        for (int i = 0; i < n; ++i) {
            while (sum + diff[i] < nums[i]) {
                if (pos == queries.length) // All Queries done?
                    return -1;
                
                int start = queries[pos][0];
                int end = queries[pos][1];
                int val = queries[pos][2];
                pos++;
                
                if (end < i) continue; // Skip past update

                // Range update in O(1)
                diff[Math.max(start, i)] += val;
                if (end + 1 < n) diff[end + 1] -= val;
            }
            sum += diff[i];
        }
        return pos;
    }
}

===============================================================================================================================================================================

# Code Complexity :- 

1.)Time complexity :- O(n*m)
2.)Space complexity :- O(n)

===============================================================================================================================================================================

 
