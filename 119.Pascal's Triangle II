## PROBLEM STATEMENT 

Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it.

==================================================================================================================================================================================

## CODE ( IN JAVA )

class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<List<Integer>> res=new ArrayList<>();
        
        res.add(new ArrayList<>());
        res.get(0).add(1);

        for(int i=1;i<=rowIndex;i++){
            List<Integer> row=new ArrayList<>();
            List<Integer> prevRow=res.get(i-1);
            row.add(1);
            for(int j=1;j<i;j++){
                row.add(prevRow.get(j-1)+prevRow.get(j));
            }
            row.add(1);
            res.add(row);
        }

        return res.get(rowIndex);
        
    }
}

==================================================================================================================================================================================

## CODE COMPLEXITIES :- 

1.) TIME COMPLEXITY :- O(n*m)
2.) SPACE COMPLEXITY :- O(n)

==================================================================================================================================================================================
